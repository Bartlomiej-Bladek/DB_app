// <auto-generated />
using System;
using Bd_Projekt.Model.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bd_Projekt.Migrations
{
    [DbContext(typeof(ProjectManagementDataContext))]
    [Migration("20230620010114_migracja13")]
    partial class migracja13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bd_Projekt.Model.Biuro", b =>
                {
                    b.Property<int>("id_biura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_biura"));

                    b.Property<string>("adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_biura");

                    b.ToTable("Biura");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Dzial", b =>
                {
                    b.Property<string>("nazwa_dzialu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("id_biura")
                        .HasColumnType("int");

                    b.HasKey("nazwa_dzialu");

                    b.HasIndex("id_biura");

                    b.ToTable("Dzialy");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Klient", b =>
                {
                    b.Property<int>("id_klienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_klienta"));

                    b.Property<string>("nazwa_firmy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_klienta");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Podwykonawca", b =>
                {
                    b.Property<int>("id_podwykonawcy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_podwykonawcy"));

                    b.Property<string>("nazwa_firmy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_podwykonawcy");

                    b.ToTable("Podwykonawcy");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Pracownik", b =>
                {
                    b.Property<int>("id_pracownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_pracownika"));

                    b.Property<DateTime>("data_zatrudnienia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_zespolu")
                        .HasColumnType("int");

                    b.Property<string>("imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nazwa_dzialu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("pensja")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("stanowisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("wyksztalcenie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_pracownika");

                    b.HasIndex("id_zespolu");

                    b.HasIndex("nazwa_dzialu");

                    b.ToTable("Pracownicy");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Projekt", b =>
                {
                    b.Property<int>("id_projektu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_projektu"));

                    b.Property<DateTime>("data_rozpoczecia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_klienta")
                        .HasColumnType("int");

                    b.Property<string>("nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_projektu");

                    b.HasIndex("id_klienta");

                    b.ToTable("Projekty");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Wspolpraca", b =>
                {
                    b.Property<int>("id_wspolpracy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_wspolpracy"));

                    b.Property<int>("id_podwykonawcy")
                        .HasColumnType("int");

                    b.Property<int>("id_zespolu")
                        .HasColumnType("int");

                    b.HasKey("id_wspolpracy");

                    b.HasIndex("id_podwykonawcy");

                    b.HasIndex("id_zespolu");

                    b.ToTable("Wspolprace");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Zespol", b =>
                {
                    b.Property<int>("id_zespolu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_zespolu"));

                    b.Property<DateTime>("data_powolania")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("data_rozwiazania")
                        .HasColumnType("datetime2");

                    b.Property<int?>("id_biura")
                        .HasColumnType("int");

                    b.Property<int?>("id_projektu")
                        .HasColumnType("int");

                    b.HasKey("id_zespolu");

                    b.HasIndex("id_biura");

                    b.HasIndex("id_projektu");

                    b.ToTable("Zespoly");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Dzial", b =>
                {
                    b.HasOne("Bd_Projekt.Model.Biuro", "Biuro")
                        .WithMany()
                        .HasForeignKey("id_biura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biuro");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Pracownik", b =>
                {
                    b.HasOne("Bd_Projekt.Model.Zespol", "Zespol")
                        .WithMany()
                        .HasForeignKey("id_zespolu");

                    b.HasOne("Bd_Projekt.Model.Dzial", "Dzial")
                        .WithMany()
                        .HasForeignKey("nazwa_dzialu");

                    b.Navigation("Dzial");

                    b.Navigation("Zespol");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Projekt", b =>
                {
                    b.HasOne("Bd_Projekt.Model.Klient", "Klient")
                        .WithMany()
                        .HasForeignKey("id_klienta");

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Wspolpraca", b =>
                {
                    b.HasOne("Bd_Projekt.Model.Podwykonawca", "Podwykonawca")
                        .WithMany()
                        .HasForeignKey("id_podwykonawcy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bd_Projekt.Model.Zespol", "Zespol")
                        .WithMany()
                        .HasForeignKey("id_zespolu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Podwykonawca");

                    b.Navigation("Zespol");
                });

            modelBuilder.Entity("Bd_Projekt.Model.Zespol", b =>
                {
                    b.HasOne("Bd_Projekt.Model.Biuro", "Biuro")
                        .WithMany()
                        .HasForeignKey("id_biura");

                    b.HasOne("Bd_Projekt.Model.Projekt", "Projekt")
                        .WithMany()
                        .HasForeignKey("id_projektu");

                    b.Navigation("Biuro");

                    b.Navigation("Projekt");
                });
#pragma warning restore 612, 618
        }
    }
}
